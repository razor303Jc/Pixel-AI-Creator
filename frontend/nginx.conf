server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html index.htm;

    # DNS resolver for dynamic upstream resolution
    resolver 127.0.0.11 valid=30s;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Main location block for React app
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Static assets with longer cache
    location /static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API proxy with dynamic resolution
    location /api/ {
        set $backend "api:8000";
        proxy_pass http://$backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle API unavailability gracefully
        proxy_connect_timeout 1s;
        proxy_read_timeout 5s;
        proxy_send_timeout 5s;
        
        # Fallback when API is not available
        error_page 502 503 504 = @api_fallback;
    }
    
    # Fallback location for when API is not available
    location @api_fallback {
        add_header Content-Type application/json;
        return 503 '{"error": "API service temporarily unavailable", "status": 503}';
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy
";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /index.html;
}
